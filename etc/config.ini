; Match Configuration File

[logging]
;method = "syslog"
method = "file"
logfile = "/tmp/match.out"
;enable specific logging/tracing -- params will be logged too! don't use in production
trace['sql'] = true

[auth]
method = "RemoteUserAuth"

[database]
type = "postgres"
host = "localhost"
database = "ucbmatch"
user = "ucb"
password = ""

[attribute:sor]
; XXX This should be automatically defined
desc = "System of Record"
column = "sor"
attribute = "sor"
casesensitive = true
search['exact'] = true

[attribute:sorid]
; XXX This should be automatically defined
desc = "System of Record Identifier"
column = "sorid"
attribute = "identifier:sor"
casesensitive = true
search['exact'] = true
;invalidates = true

; Local attributes

[attribute:ssn]
; XXX don't match on SSN=00000[0000]
desc = "SSN"
column = "attr_identifier_national"
attribute = "identifier:national"
alphanum = true
;casesensitive = true
search['exact'] = true
search['distance'] = 2

[attribute:firstname]
desc = "Given Name (official)"
column = "attr_name_given_official"
attribute = "name:given"
group = "official"
;required = true   // XXX implement this
casesensitive = false
search['exact'] = true
;XXX search['dictionary'] = "nickname"
search['distance'] = 2
;XXX search['soundex'] = true

[attribute:lastname]
desc = "Family Name (official)"
column = "attr_name_family_official"
attribute = "name:family"
group = "official"
casesensitive = false
search['exact'] = true
search['distance'] = 2

[attribute:dob]
desc = "DoB"
column = "attr_date_of_birth"
attribute = "dateOfBirth"
alphanum = true
;casesensitive = true
search['exact'] = true
search['distance'] = 2

[attribute:affiliateid]
desc = "Affiliate ID"
column = "attr_identifier_sor_affiliate"
attribute = "identifier:sor-affiliate"
casesensitive = true
invalidates = true
search['exact'] = true

[attribute:employeeid]
desc = "Employee ID"
column = "attr_identifier_sor_employee"
attribute = "identifier:sor-employee"
casesensitive = true
invalidates = true
search['exact'] = true

[attribute:studentid]
desc = "Student ID"
column = "attr_identifier_sor_student"
attribute = "identifier:sor-student"
casesensitive = true
invalidates = true
search['exact'] = true

[confidence:canonical]
; Any of the following returns a canonical match when all fields match exactly
set1[] = "sor"
set1[] = "sorid"

set2[] = "ssn"
set2[] = "firstname"
set2[] = "lastname"
set2[] = "dob"

;set3[] = "affiliateid"

set4[] = "employeeid"
set4[] = "firstname"
set4[] = "lastname"

set5[] = "studentid"
set5[] = "firstname"
set5[] = "lastname"

[confidence:potential]
; If there are no canonical matches, then try for potential matches
set1['ssn'] = "exact"
set1['firstname'] = "exact"
set1['lastname'] = "exact"
set1['dob'] = "distance"

set2['ssn'] = "distance"
set2['firstname'] = "exact"
set2['lastname'] = "exact"
set2['dob'] = "exact"

set3['ssn'] = "exact"
set3['dob'] = "exact"

;set4['firstname'] = "distance"
;set4['lastname'] = "distance"
;set4['dob'] = "exact"

[sors]
; XXX Could define authnz credentials/permissions here
; XXX external vs interactive
guest['resolution'] = 'interactive'